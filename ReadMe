This package is mainly targeting Cerbo GX users that wants to extend Digital Inputs and Relays on their system.
Please note that there is a conflict with Kwindrem's RpiGpioSetup that is targeting Raspberry pi users

In order to have a reliable direct attached interface to the relay, I selected a Modbus/RTU based relai from Dingtian that attaches on the USB port of the Cerbo GX.
There are many solutions for attaching relays via Ethernet, but I didn't the relays to rely on an external Ethernet network switch.

This Dingtian box provide 8x relays, that can be controlled with Modbus Serial, but also over IP and with various additional protocols: https://fr.aliexpress.com/item/4000999069820.html
They have variants of 4 or 8 relays.
A USB to RS 485 adapter will be required.
I selected this one as this is coming with a USB cable and can fit nicely on the Cerbo GX: https://fr.aliexpress.com/item/1005004778767986.html
The RS485 must be connected on the first USB port of the Cerbo GX

SETUP:
The setup is now fully automated, no more requirement to issue shell commands! :-)
It runs only with VenusOS Large with minimum version 2.92
Be patient with the Install package, it can takes few minutes as it downloads few Node-RED palettes 

*IMPORTANT* If a different adpater is used, or if a different USB port is used (or attached after a USB hub) the file /etc/udev/rules.d/serial-starter.rules will required to be tweaked accordingly so our RS485 adpater is always accesible with /dev/ttyUSB0

The Dingtian IOT Relay module also needs to be configured so Modbus RTU works:
Connect the ethernet interface of the module and access to its configuration page (192.168.1.100 and admin/admin by default).
Configure the RS485 with Protocol Modbus-RTU and set address to 1 (for the first unit).

RemoteGPIO can be used from VenusOS GUI to control 4x additional relays.
It is required to install Kwindrem's GuiMods package (https://github.com/kwindrem/GuiMods)
Go to Settings/Relay there are 4x additional relays to be enabled and then use the dedicated Relay page that should display the additional relays

RemoteGPIO can also be used with Node-RED
With Node-Red it is possible to use all 8x relays as well as the 8x digital inputs
The following Node-RED palettes are automatically installed:
	— node-red-dashboard
	— node-red-contrib-buffer-parser
	— node-red-contrib-debounce
If there no flows yet running the RemoteGPIO one gets installed
If a flow is already installed, in order to not break anything RemoteGPIO will need to be manually imported from the local library (Menu Import / Local / RemoteGPIO.json)
The RemoteGPIO flow is now adding a Node-RED dashboard for controlling the Relays and monitoring the Digital Inputs
RemoteGPIO v2.x is backward compatible with previous venus_rgpio (https://community.victronenergy.com/questions/166784/solution-adding-external-relays-to-cerbo-gx-using.html).
Any questions or suggestions about RemoteGPIO are welcome here: XXXXXXX

Toubleshooting from command line with dbus
List of all dbus relays and their status:
dbus -y com.victronenergy.system /Relay GetValue
Close Relay 3:
dbus -y com.victronenergy.system /Relay/3/State SetValue %1

Toubleshooting from command line with modbus
Read Digital Inputs:
/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -r 11 -s 1 -c 1 /dev/ttyUSB0
Close Relay 1:
/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 3 -s 1 -c 1 /dev/ttyUSB0 257
Open Relay 1:
/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 3 -s 1 -c 1 /dev/ttyUSB0 256

Prevent USB0 to be used by another service:
/opt/victronenergy/serial-starter/stop-tty.sh ttyUSB0
