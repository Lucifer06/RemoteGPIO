#!/bin/sh

### BEGIN INIT INFO
# Short-Description: Driver to send relays values in loop for ever
# Description:       rgpio is used to conect expternal Relay box with ModBus/RTU control
### END INIT INFO

exec 2>&1


conf_unit1_relay="/data/RemoteGPIO/Workinprogress/Relays_1-8.conf"
conf_unit1_digitalinput="/data/RemoteGPIO/Workinprogress/Digital_Inputs_1-8.conf"
conf_unit2_relay="/data/RemoteGPIO/Workinprogress/Relays_9-16.conf"                            
conf_unit2_digitalinput="/data/RemoteGPIO/Workinprogress/Digital_Inputs_9-16.conf"  
zero=0
prev_const1=0
prev_const2=0  
timer=$(date +%s)

##
## Handle Dbus Settings
###############################
get_setting()                                                                                                                                                                                                            
{                                                                                                                                                                                                                
	dbus-send --print-reply=literal --system --type=method_call --dest=com.victronenergy.settings $1 com.victronenergy.BusItem.GetValue | awk '/int32/ { print $3 }'                                         
}                                                                                                                                                                                                                
                                                                                                                                                                                                                         
set_setting()                                                                                                                                                                                                            
{                                                                                                                                                                                                                
	dbus-send --print-reply=literal --system --type=method_call --dest=com.victronenergy.settings $1 com.victronenergy.BusItem.SetValue $2 >> /dev/null                                                                  
}

latency=$(dbus -y com.victronenergy.settings  /Settings/RemoteGPIO/Latency GetValue)
protocol=$(get_setting /Settings/RemoteGPIO/Protocol)
nbunit=$(get_setting /Settings/RemoteGPIO/NumberUnits)



##
## Main loop
###############################
while true
do


	##
	## Handle Unit1 with 8x Relays 
	#################################
	index=1
	i=1
	j=256
	const=0
	for Relay in `cat $conf_unit1_relay`
	do
		value=`cat $Relay`
		if [ $value -eq $zero ]
		then
			const=$((const+j))
		else
			const=$((const+j+i))
		fi	
		index=$((index+1))
		i=$((i*2))
                j=$((256*i))
	done

	if [ $const != $prev_const1 ]
	then

		#called only if relay change
		/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 3 -s 1 -c 1 /dev/ttyUSB0 $const >> /dev/null
	fi
	prev_const1=$((const))


        ##                                                                             
        ## Handle Unit2 with 8x Relays                                                 
        #################################                                              
        if [ $nbunit -eq 2 ] 
	then
        	index=1                                                                        
        	i=1                                                                            
        	j=256                                                                          
        	const=0                                                                        
        	for Relay in `cat $conf_unit2_relay`                                                     
        	do                               
        	        value=`cat $Relay`       
        	        if [ $value -eq $zero ]  
        	        then                     
        	                const=$((const+j))
        	        else                      
        	                const=$((const+j+i))
        	        fi                          
        	        index=$((index+1))          
        	        i=$((i*2))                  
        	        j=$((256*i))                
        	done                                
        	                                    
        	if [ $const != $prev_const2 ]        
        	then                                
        	                                    
        	        #called only if relay change
        	        /data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 3 -s 1 -c 1 /dev/ttyUSB1 $const >> /dev/null
        	fi                                                                                                                                      
        	prev_const2=$((const)) 
	fi


	##
	## Handle Unit1 with 8x Digital_Inputs
	#################################
        msg=$(echo -n $(/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 11 -s 1 -c 1 /dev/ttyUSB0) | awk '{print $NF}')        
        number=$(($msg))   

	if ((number >= 0 && number <= 255)); then    

		# Parsing number for writing the 8x Input Devices
	        i=1                                                                             
	        for Digital_Input in `cat $conf_unit1_digitalinput`                                                      
	        do
			echo $((($number & $i) != 0)) > $Digital_Input 
			i=$((i*2)) 
		done
        fi


	##                                                                                                                                              
        ## Handle Unit2 with 8x Digital_Inputs                                                                                                          
        #################################                                                                                                               
	if [ $nbunit -eq 2 ]                                                                                                                  
        then
        	msg=$(echo -n $(/data/rgpio/modpoll/arm-linux-gnueabihf/modpoll -m rtu -b 115200 -p none -d 8 -1 -r 11 -s 1 -c 1 /dev/ttyUSB1) | awk '{print $NF}')
        	number=$(($msg))                                                                                                                                   
                                                                                                                                                           
        	if ((number >= 0 && number <= 255)); then                                                                                                          
                                                                                                                                                           
        	        # Parsing number for writing the 8x Input Devices                                                                                          
                	i=1                                                                                                                                        
                	for Digital_Input in `cat $conf_unit2_digitalinput`                                                                                             
                	do                                                                                                                                         
                	        echo $((($number & $i) != 0)) > $Digital_Input                                                                                     
                        	i=$((i*2))
			done                                                                                                                                       
        	fi
	fi



	##                                                                                                                                              
	## Latency vs CPU load                                                                                                                      
	#################################
        sleep $latency                     



	##
	## Heart Beat
	################################
	if (( (timer + 5) < $(date +%s) ))
	then
		timer=$(date +%s)
		set_setting /Settings/Watchdog/RemoteGPIO variant:int32:$timer
		echo "Hertbeat = "$(date -d@$timer)
	fi



done
